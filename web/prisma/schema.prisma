generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PublishStatus {
  DRAFT
  PUBLISHED
  DELETED
}

enum ProjectType {
  MAP
  MOD
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  fullname String
  description String?
  email String @unique
  imageUrl String? @default("https://www.gravatar.com/avatar/")
  lastUsernameChange DateTime?

  roles String[]

  projects Project[]
  likes Like[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  deleted Boolean @default(false)
  deletedAt DateTime?
}

model Project {
  type ProjectType
  id Int @id @default(autoincrement())
  publishStatus PublishStatus @default(DRAFT)
  name String @unique
  description String?
  imageUrl String?
  user User @relation(fields: [userId], references: [id])
  userId Int
  downloads Int @default(0)
  views Int @default(0)
  longDescription String?
  latestVersion String?

  tags String[]
  versions Version[]
  likes Like[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  deletedAt DateTime?
}

model Version {
  id Int @id @default(autoincrement())
  project Project @relation(fields: [projectId], references: [id])
  projectId Int
  version String
  downloadUrl String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  changes String
  
  deleted Boolean @default(false)
  deletedAt DateTime?
}

model Like {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  project Project @relation(fields: [projectId], references: [id])
  projectId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  deletedAt DateTime?
}